// console.log("progress.js - –†–æ–±–∏–º–æ –ø—Ä–æ–≥—Ä–µ—Å–ª—ñ—Å—Ç");

/*
    –¢—É—Ç —Ñ–æ—Ä–º—É—î—Ç—å—Å—è –º–∞—Å–∏–≤ –∑ –Ω–∞–π–∫—Ä–∞—â–∏–º–∏ —Ä—É–∑—å—Ç–∞—Ç–∞–º–∏ —è–∫–∏–π –≤—ñ–¥–º–∞–ª—å–æ–≤—É—î—Ç—å—Å—è 
    —è–∫ ProgressList
*/

import { getFormatTime } from "./admins.js";
import { setting } from "./setting.js";



// ===== FUNCTIONS =============

export function createProgressArr(dataarr, usename) {
    const progressArr = [];
    for (let i=0; i<8; i+=1) {
        // —Ñ—ã–ª—å—Ç—Ä—É–≤–∞–Ω–Ω—è –ø–æ —ñ–º–µ–Ω—ñ —Ç–∞ –º–Ω–æ–∂–Ω–∏–∫—É (2-9)
        const newArr = dataarr.filter(item => {
            return item.userName === usename && item.mult_1 === i+2;
        });
        
        if(newArr.length === 0) {
            progressArr[i] = {userName: usename, mult_1: i+2, rightAnswer: "-", needTime: "-"};
            continue; 
        }
        progressArr[i] = newArr[0];
    }
    // console.log(progressArr);
    return progressArr;
}


export function renderProgressList(arr) {
    const markup = arr.map((item, idx) => {
        let classColor = "red";
        if(item.rightAnswer === 8) classColor = 'green';
        let iron =   item.needTime <= setting.getIron()[idx] && item.rightAnswer === 8 ? "üéá" : getFormatTime(setting.getIron()[idx]);
        let silver = item.needTime <= setting.getSilver()[idx] && item.rightAnswer === 8 ? "ü•à" : getFormatTime(setting.getSilver()[idx]);
        let gold =   item.needTime <= setting.getGold()[idx] && item.rightAnswer === 8 ? "üèÜ" : getFormatTime(setting.getGold()[idx]);

        return `
            <tr class="tablet-${classColor}">
                <td>${item.mult_1}</td>
                <td>${item.rightAnswer}/8</td>
                <td>${getFormatTime(item.needTime)}</td>
                <td class="no-result">${iron}</td>
                <td class="no-result">${silver}</td>
                <td class="no-result">${gold}</td>
            </tr>
        `
    }).join("");
    return markup;
}


// export function createProgressArr(dataarr) {
//     const progressArr = [];
//     for (let i=0; i<8; i+=1) {
//         // —Ñ—ã–ª—å—Ç—Ä—É–≤–∞–Ω–Ω—è –ø–æ —ñ–º–µ–Ω—ñ —Ç–∞ –º–Ω–æ–∂–Ω–∏–∫—É (2-9)
//         const newArr = dataarr.filter(item => {
//             return item.userName === "–Ü–ª–ª—è" && item.mult_1 === i+2;
//         });
        
//         if(newArr.length === 0) {
//             progressArr[i] = {userName: "Noname", mult_1: i+2, rightAnswer: "-", needTime: "-"};
//             continue; 
//         }
//         // —Å—Ç–≤–æ—Ä–∏—Ç–∏ –º–∞—Å–∏–≤ –ø—Ä–∞–≤–∏–ª—å–Ω–∏—Ö –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π
//         const newAnswerArr = [];
//         newArr.forEach(element => newAnswerArr.push(element.rightAnswer));

//         // –°—Ç–≤–æ—Ä–∏—Ç–∏ –º–∞—Å–∏–≤ –∑ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —á–∏—Å–ª–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–∏—Ö –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π (0-8)
//         const maxAnswerArr = newArr.filter(item => item.rightAnswer === Math.max(...newAnswerArr));

//         // –í–∑—è—Ç–∏ –æ–±—î–∫—Ç –∑ –Ω–∞–π–∫—Ä–∞—â–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º —Ç–∞–π–º–µ—Ä–∞
//         const newTimeArr = [];
//         maxAnswerArr.forEach(element => newTimeArr.push(element.needTime));
//         const minTimeArr = maxAnswerArr.filter(item => item.needTime === Math.min(...newTimeArr));
//         progressArr[i] = minTimeArr[0];
//     }
//     // console.log(progressArr);
//     return progressArr;
// }
